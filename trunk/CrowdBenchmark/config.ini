[Random]
seed = 123456789

[Path]
Output = ./
CSVoutput = ./

[MainIterator]
Iterator = 1

//"Honey Pot, Majority Decision, EM, ELICE, SLME, IterativeLearning, GLAD"
[Algorithms]
algorithms = HoneyPot,MajorityDecision,EM,ELICE,SLME,IterativeLearning,GLAD
//EM
Em_iter = 10
//Honey Pot
evaluatedMinimum = 4
evaluatedThreshold = 6
checkHPConstraint = 0
//ELICE
ratioSubset = 4
checkRatioSubset = 1
//SLME
SLME_iter = 20
SLME_threshold = 0.5
//IterativeLearning
IterativeLearning_iter = 10
//GLAD
GLAD_threshold = 0.5

// "PURCHASE_ORDER, BUSINESS_PARTNER_OLD, UNIVERSITY_APPLICATION_FORM"
datasets = BUSINESS_PARTNER_OLD

[Workers]
total = 30
// spammers = total - WorkersTruthful
// WorkersTruthful: % or fix(n)
WorkerTypeRatio = 100%
WorkerType = truthful
// random, uniform, semi
//use fix(n) for exactly n worker
spammersRatio = 100%;fix(5);10%
spammersType = random;uniform;semi
//semi spammer
semiSpammerRatio = 0.3
//thresholdSpammers
SpammerThreshold = 0.5
//acceptable sd
SDAcceptable = 0.05
//NormalDistributor, FixedDistributor, UniformDistributor, MixedDistributor
workerDistributor = MixedDistributor
reliabilityThreshold = 0
default_reliability = 0.5
default_sensitivity = 0.5
default_specificity = 0.5
// MixedDistributor
/* for a fixed number, use this fix(a), the rest will scale base on its percentages.
* for all cases , the last number will be adjusted to ensure that the size of workersRatio and totalWorkers declare above are the same.
* NormalDistribution(a, b) a: mean, b: sd
* UniformDistribution(a, b) a:lowBound, b: maxBound
/* FixedDistribution(a) or a , which a is reliability degree
workersRatio = 70%;30%;100%
typeOfDistributor = NormalDistribution(0.8,0.1);UniformDistribution(0.55,0.8);NormalDistribution(0.3,0.1)
//TwoCoin
typeOfDistributorSensitivity = NormalDistribution(0.8,0.1);UniformDistribution(0.55,0.8);NormalDistribution(0.3,0.1)
typeOfDistributorSpecificity = NormalDistribution(0.8,0.1);UniformDistribution(0.55,0.8);NormalDistribution(0.3,0.1)
//NormalDistributor
mean = 0.4
sd = 0.3
//UniformDistributor
lowBound = 0.35
upBound = 0.8
//FixedDistributor
fixed = 0.5

[Questions]
QuestionDistributor = HoneyPotDistributor
HoneyPotRatio = 20
NumOfQuestion = 30
// QuestionRatio = 0.6
// constrains of number Yes/No
InputDataConstrains = true
InputDataRatio = 0.5
//Binary, Multiple
InputDataType = Binary
// if Multiple
InputNumberLabels = 2
// % or fix(n)
InputRatioLabels = 50%;50%

[FeedBacks]
//FeedBacksPerQuestionDistributor, FeedBacksPerWorkerDistributor, FeedBacksConstraintDistributor
feedbacksDistributor = FeedBacksConstraintDistributor
// set 0 for unlimited
feedbackRatio = 0.1
feedbacksPerWorker = 1
feedbackRatioQuestion = 0.1
feedbacksPerQuestion = 1
// Normal, TwoCoin
feedbackModel = TwoCoin

